{
	"name": "content-control",
	"version": "2.6.1",
	"description": "",
	"author": "Code Atlantic LLC",
	"license": "GPL-2.0-or-later",
	"keywords": [
		"wordpress",
		"restriction",
		"access control"
	],
	"homepage": "https://contentcontrolplugin.com",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/code-atlantic/content-control.git"
	},
	"bugs": {
		"url": "https://github.com/code-atlantic/content-control/issues"
	},
	"engines": {
		"node": "^16"
	},
	"files": [
		"assets/**/*",
		"classes/**/*",
		"dist/**/*",
		"inc/**/*",
		"languages/**/*",
		"vendor/autoload.php",
		"vendor/composer/*.php",
		"vendor/composer/*.json",
		"vendor-prefixed/**/*",
		"readme.txt",
		"index.php",
		"content-control.php",
		"contributors.txt",
		"index.php",
		"uninstall.php"
	],
	"dependencies": {
		"@content-control/block-editor": "file:./packages/block-editor",
		"@content-control/components": "file:./packages/components",
		"@content-control/core-data": "file:./packages/core-data",
		"@content-control/data": "file:./packages/data",
		"@content-control/fields": "file:./packages/fields",
		"@content-control/icons": "file:./packages/icons",
		"@content-control/rule-engine": "file:./packages/rule-engine",
		"@content-control/settings-page": "file:./packages/settings-page",
		"@content-control/utils": "file:./packages/utils",
		"@content-control/widget-editor": "file:./packages/widget-editor"
	},
	"devDependencies": {
		"@code-atlantic/browserslist-config": "^1.0.1",
		"@code-atlantic/eslint-plugin": "^1.2.1",
		"@code-atlantic/stylelint-config": "^1.2.0",
		"@content-control/custom-templated-path-webpack-plugin": "file:./packages/custom-templated-path-webpack-plugin",
		"@content-control/dependency-extraction-webpack-plugin": "file:./packages/dependency-extraction-webpack-plugin",
		"@nrwl/nx-cloud": "^19.0.0",
		"@wordpress/prettier-config": "^3.4.0",
		"@wordpress/scripts": "^26.18.0",
		"nx": "16.10.0",
		"path": "^0.12.7",
		"prettier": "npm:wp-prettier@3.0.3",
		"wp-pot-cli": "^1.5.0"
	},
	"scripts": {
		"build": "wp-scripts build",
		"build:release": "NODE_ENV=production npm run build",
		"clean:packages": "nx run-many --target=clean",
		"build:tsc": "nx run-many --target=build:tsc",
		"build:types": "nx run-many --target=build:types",
		"packages-update-deep": "nx run-many --target=packages-update",
		"check-engines": "wp-scripts check-engines",
		"check-licenses": "wp-scripts check-licenses",
		"composer": "wp-env run cli --env-cwd=wp-content/plugins/content-control composer",
		"copy-build": "node bin/copy-build.js",
		"format": "wp-scripts format",
		"format:packages": "wp-scripts format ./packages/**/src",
		"format:php": "npm run composer run-script format",
		"lint:css": "wp-scripts lint-style",
		"lint:md:docs": "wp-scripts lint-md-docs",
		"lint:md:js": "wp-scripts lint-md-js",
		"lint:packages": "nx run-many --target=lint",
		"lint:pkg-json": "wp-scripts lint-pkg-json",
		"prelint:php": "npm run composer install --no-interaction",
		"lint:php": "npm run composer run-script lint",
		"packages-update": "wp-scripts packages-update && npx nx run-many --target=packages-update",
		"plugin-zip": "wp-scripts plugin-zip",
		"start": "wp-scripts start",
		"start:hot": "wp-scripts start --hot",
		"test:e2e": "wp-scripts test-e2e",
		"test:unit": "wp-scripts test-unit-js",
		"test": "echo \"Error: no test specified\" && exit 1",
		"test:php": "npm run lint:php && npm run test:unit:php",
		"test:php:watch": "npm run composer run-script test:watch",
		"pretest:unit:php": "wp-env start",
		"test:unit:php": "wp-env run phpunit /var/www/html/wp-content/plugins/content-control/vendor/bin/phpunit -c /var/www/html/wp-content/plugins/content-control/phpunit.xml.dist --verbose",
		"translate": "wp-pot --src './classes/**/*.php' --src '!./build/**/*.*' --src '!./vendor/**/*.*' --src '!./dist/**/*.*' --write=true --dest-file 'languages/content-control.pot' --package 'Content Control' --domain 'content-control' --last-translator 'Code Atlantic <support@code-atlantic.com>' --team 'Code Atlantic <support@code-atlantic.com>' --bug-report 'https://code-atlantic.com/contact/'",
		"release:build": "composer install -o --no-dev --classmap-authoritative && npm run build:release && npm run copy-build",
		"release:zip": "mv build content-control && zip -r content-control_$(node -p \"require('./package.json').version\").zip content-control && rm -rf content-control",
		"release:start": "git flow release start",
		"release:finish": "git flow release finish",
		"release:publish": "git push origin master --tags && git push origin master"
	},
	"babel": {},
	"workspaces": [
		"./packages/*"
	]
}
